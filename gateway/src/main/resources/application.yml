spring:
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_URL:http://localhost:8092}/realms/Test-Realm
        registration:
          keycloak:
            provider: keycloak
            authorization-grant-type: authorization_code
            client-id: test-client
            client-secret: vArj4Jasbft9Rmk291Q4LOb0x53P2UmK
            scope:
              - openid
              - profile
              - email
              - offline_access
  cloud:
    gateway:
        routes:
            - id: resource-server
              uri: ${RESOURCE_SERVER_URL:http://localhost:8090}
              predicates:
                - Path=/api/**
              filters:
                - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
                - TokenRelay=
                - SaveSession
                - StripPrefix=1
            - id: frontend
              uri: ${FRONTEND_URL:http://localhost:8099}
              predicates:
                - Path=/**
  docker:
      compose:
          enabled: false
          file: compose.yml
  application:
      name: API-Gateway
server:
    port: 8095